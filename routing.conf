function __expand_conditions {
    setopt localoptions extendedglob
    integer __idx=0
    __FAST_ROUTING=( "${__FAST_ROUTING[@]/(#b)((#e))/ && return $(( ++ __idx )); }" )
}

#
# ROUTING LARGE CASE
# It switched over `type -w ...' result
#

__FAST_ROUTING=(
    '[[ "$REPLY" = "reserved" ]]'       # 1
    '[[ "$REPLY" = "suffix alias" ]]'   # 2
    '[[ "$REPLY" = "alias" ]]'          # 3
    '[[ "$REPLY" = "builtin" ]]'        # 4
    '[[ "$REPLY" = "function" ]]'       # 5
    '[[ "$REPLY" = "command" ]]'        # 6
    '[[ "$REPLY" = "hashed" ]]'         # 7
    '[[ "$REPLY" = "dirpath" ]]'        # 8
    '[[ "$REPLY" = "none" ]]'           # 9
    '(( 1 ))'
)

__expand_conditions

autoload -Uz hue/type--reserved hue/type--suffix-alias hue/type--alias hue/type--builtin hue/type--function \
             hue/type--command hue/type--hashed hue/type--dirpath hue/type--none

typeset -ga FAST_DISPATCH__TYPE=(
    hue/type--reserved                  # 1
    hue/type--suffix-alias              # 2
    hue/type--alias                     # 3
    hue/type--builtin                   # 4
    hue/type--function                  # 5
    hue/type--command                   # 6
    hue/type--hashed                    # 7
    hue/type--dirpath                   # 8
    -fast-hue-none-call                 # 9
    typeset$'\0'-g$'\0'already_added=1
)

functions[-fast-hue-type-choose]="${(j::)__FAST_ROUTING};"
function -fast-hue-type-call { -fast-hue-type-choose; ${(0e)FAST_DISPATCH__TYPE[$?]}; }

unset __FAST_ROUTING

#
# ROUTING LARGE IF
# Used when type -w ... == none
#

# Routing of `if' conditions
typeset -ga __FAST_ROUTING=(
    # 1. assign
    '[[ $__arg == [a-zA-Z_][a-zA-Z0-9_]#(|\[[^\]]#\])(|[^\]]#\])(|[+])=* || $__arg == [0-9]##(|[+])=* || "${braces_stack[1]}" = "T" ]]'
    '[[ $__arg[1] = $histchars[1] && -n "${__arg[2]}" ]]'      # 2. history expansion
    '[[ $__arg[1] == $histchars[2] ]]'                         # 3. history expansion
    '(( (__arg_type == 3) && (this_word & 2) ))'               # 4. command separator
    '[[ $__arg[1,2] == "((" ]]'                                # 5. arithmetic
    '[[ $__arg == "()" ]]'                                     # 6. anonymous function
    '[[ $__arg == "(" ]]'                                      # 7. open subshell
    '[[ $__arg == ")" ]]'                                      # 8. close subshell
    '(( this_word & 14 ))'                                     # 9. sudo
    '[[ "$__arg" = ";;" ]] && (( this_word & BIT_case_code ))' # 10. end of `case' item
    '(( 1 ))'                                                  # 11. catch all
)

__expand_conditions

autoload -Uz hue/none--assign hue/none--history-exp hue/none--command-separator hue/none--arithmetic hue/none--anon \
             hue/none--open-subshell hue/none--close-subshell hue/none--sudo hue/none--end-case-item

typeset -ga FAST_DISPATCH__NONE=(
    hue/none--assign             # 1
    hue/none--history-exp        # 2
    hue/none--history-exp        # 3
    hue/none--command-separator  # 4
    hue/none--arithmetic         # 5
    hue/none--anon               # 6
    hue/none--open-subshell      # 7
    hue/none--close-subshell     # 8
    hue/none--sudo               # 9
    hue/none--end-case-item      # 10
    :
)

functions[-fast-hue-none-choose]="${(j::)__FAST_ROUTING};"
function -fast-hue-none-call { -fast-hue-none-choose; ${(0e)FAST_DISPATCH__NONE[$?]}; }

# vim:ft=zsh:et:sw=4
