function __expand_conditions {
    setopt localoptions extendedglob
    integer __idx=0
    __FAST_ROUTING=( "${__FAST_ROUTING[@]/(#b)((#e))/ && \$${1}[$(( ++ __idx ))] && return; }" )
}

#
# ============================ Type Case Replaced ============================
#

#
# ROUTING LARGE `CASE' VIA HASH
# It (the case) switched over `type -w ...' result
#

typeset -gA FAST_HIGHLIGHT
FAST_HIGHLIGHT+=(
    "tp-reserved"        hue/type--reserved     
    "tp-suffix alias"    hue/type--suffix-alias 
    "tp-alias"           hue/type--alias        
    "tp-builtin"         hue/type--builtin      
    "tp-function"        hue/type--function     
    "tp-command"         hue/type--command      
    "tp-hashed"          hue/type--hashed       
    "tp-dirpath"         hue/type--dirpath      
    "tp-none"            -fast-hue-none-choose  
)

autoload -Uz hue/type--reserved hue/type--suffix-alias hue/type--alias hue/type--builtin hue/type--function \
             hue/type--command hue/type--hashed hue/type--dirpath hue/type--none

#
# ============================ Type "none" Replaced ============================
#

#
# ROUTING LARGE IF VIA ARRAY
# Used when type -w ... == none
#

# Routing of `if' conditions
typeset -ga __FAST_ROUTING=(
    # 1. assign
    '[[ $__arg == [a-zA-Z_][a-zA-Z0-9_]#(|\[[^\]]#\])(|[^\]]#\])(|[+])=* || $__arg == [0-9]##(|[+])=* || "${braces_stack[1]}" = "T" ]]'
    '[[ $__arg[1] = $histchars[1] && -n "${__arg[2]}" ]]'      # 2. history expansion
    '[[ $__arg[1] == $histchars[2] ]]'                         # 3. history expansion
    '(( (__arg_type == 3) && (this_word & 2) ))'               # 4. command separator
    '[[ $__arg[1,2] == "((" ]]'                                # 5. arithmetic
    '[[ $__arg == "()" ]]'                                     # 6. anonymous function
    '[[ $__arg == "(" ]]'                                      # 7. open subshell
    '[[ $__arg == ")" ]]'                                      # 8. close subshell
    '(( this_word & 14 ))'                                     # 9. sudo
    '[[ "$__arg" = ";;" ]] && (( this_word & BIT_case_code ))' # 10. end of `case' item
    '(( 1 ))'                                                  # 11. catch all
)

__expand_conditions FAST_DISPATCH__NONE

autoload -Uz hue/none--assign hue/none--history-exp hue/none--command-separator hue/none--arithmetic hue/none--anon \
             hue/none--open-subshell hue/none--close-subshell hue/none--sudo hue/none--end-case-item

typeset -ga FAST_DISPATCH__NONE=(
    hue/none--assign             # 1
    hue/none--history-exp        # 2
    hue/none--history-exp        # 3
    hue/none--command-separator  # 4
    hue/none--arithmetic         # 5
    hue/none--anon               # 6
    hue/none--open-subshell      # 7
    hue/none--close-subshell     # 8
    hue/none--sudo               # 9
    hue/none--end-case-item      # 10
    :
)

functions[-fast-hue-none-choose]="${(j::)__FAST_ROUTING};"

#
# ============================ No-Command Case Replaced ============================
#

FAST_HIGHLIGHT+=(
    "nc-]]"   hue/nocmd--close-2-brackets     # 1
    "nc-]"    hue/nocmd--close-1-bracket      # 2
    "nc-("    hue/nocmd--open-parenthesis     # 3
    "nc-)"    hue/nocmd--close-parenthesis    # 4
    "nc-()"   hue/nocmd--func-def             # 5

    "nc-(("   hue/nocmd--open-for-loop-def    # 14
    "nc-))"   hue/nocmd--close-for-loop-def   # 15
    "nc-<<<"  hue/nocmd--here-string          # 16
)

__FAST_ROUTING=(
    #'[[ "$__arg" = "]]" ]]'         # 1
    #'[[ "$__arg" = "]" ]]'          # 2
    #'[[ "$__arg" = "(" ]]'          # 3
    #'[[ "$__arg" = ")" ]]'          # 4
    #'[[ "$__arg" = "()" ]]'         # 5
    '[[ "$__arg" = --* ]]'          # 6
    '[[ "$__arg" = -* ]]'           # 7
    '[[ "$__arg" = ('"\\'*|"'\"*) ]]'  # 8
    '[[ "$__arg" = [^\"\\]##([\\][\\])#\"* ]]'          # 9
    '[[ "$__arg" = [^\'"'"'\\]##([\\][\\])#\'"'"'* ]]'  # 10
    '[[ "$__arg" = \$\'"'"'* ]]'    # 11
    '[[ "$__arg" = \$\(\(* ]]'      # 12
    '[[ "$__arg" = '"'\`'"'* ]]'    # 13
    #'[[ "$__arg" = "((" ]]'         # 14
    #'[[ "$__arg" = "))" ]]'         # 15
    #'[[ "$__arg" = "<<<" ]]'        # 16

    # Star (*) elements
    '[[ "${braces_stack[1]}" = "F" ]]'                     # 17
    '[[ "$__arg" = ([*?]*|*[^\\][*?]*|*[\#][\#]*) ]]'      # 18
    '[[ "$__arg" = \$* ]]'                                 # 19
    '[[ $__arg = "}" && $braces_stack[1] == "Y" && "$FAST_HIGHLIGHT[right_brace_is_recognised_everywhere]" = "1" ]]' # 20
    '[[ "$__arg" = ";;" ]] && (( this_word & BIT_case_code ))'  # 21
    '[[ $__arg[1] = $histchars[1] && -n "${__arg[2]}" ]]'  # 22
    '(( __arg_type == 3 ))'         # 23
    '(( in_redirection == 2 ))'     # 24
    '[[ -z "${FAST_HIGHLIGHT[no_check_paths]}" ]]'  # 25
    '(( 1 ))'   # 26
)

__expand_conditions FAST_DISPATCH__NOCMD_ALL

autoload -Uz hue/nocmd--arithmetic hue/nocmd--close-1-bracket hue/nocmd--close-2-brackets hue/nocmd--close-for-loop-def \
            hue/nocmd--close-parenthesis hue/nocmd--double-hyphen hue/nocmd--func-def hue/nocmd--here-string \
            hue/nocmd-star--history-expn hue/nocmd--open-for-loop-def hue/nocmd--open-parenthesis hue/nocmd--single-hyphen \
            hue/nocmd--string hue/nocmd--string-backtick hue/nocmd--string-dollar-q hue/nocmd--string-glued-dq \
            hue/nocmd--string-glued-sq hue/nocmd-star--case-end-item hue/nocmd-star--cmd-separator \
            hue/nocmd-star--for-loop-def hue/nocmd-star--glob hue/nocmd-star--path-check hue/nocmd-star--redirection \
            hue/nocmd-star--right-brace hue/nocmd-star--style-default hue/nocmd-star--variable

# `ALL' because it treats (*) `case' item and the if-s
# there as one `case' block
typeset -ga FAST_DISPATCH__NOCMD_ALL=(
    #hue/nocmd--close-2-brackets     # 1
    #hue/nocmd--close-1-bracket      # 2
    #hue/nocmd--open-parenthesis     # 3
    #hue/nocmd--close-parenthesis    # 4
    #hue/nocmd--func-def             # 5
    hue/nocmd--double-hyphen        # 6
    hue/nocmd--single-hyphen        # 7
    hue/nocmd--string               # 8
    hue/nocmd--string-glued-dq      # 9
    hue/nocmd--string-glued-sq      # 10
    hue/nocmd--string-dollar-q      # 11
    hue/nocmd--arithmetic           # 12
    hue/nocmd--string-backtick      # 13
    #hue/nocmd--open-for-loop-def    # 14
    #hue/nocmd--close-for-loop-def   # 15
    #hue/nocmd--here-string          # 16

    # case catch-all (*), just to be able to write some ifs,
    # so Ok, they are actually part of the `case', we will
    # handle them without new array here in place
    hue/nocmd-star--for-loop-def    # 17
    hue/nocmd-star--glob            # 18
    hue/nocmd-star--variable        # 19
    hue/nocmd-star--right-brace     # 20
    hue/nocmd-star--case-end-item   # 21
    hue/nocmd-star--history-expn    # 22
    hue/nocmd-star--cmd-separator   # 23
    hue/nocmd-star--redirection     # 24
    hue/nocmd-star--path-check      # 25
    hue/nocmd-star--style-default   # 26
)

functions[-fast-hue-nocmd-choose]="${(j::)__FAST_ROUTING};"

# vim:ft=zsh:et:sw=4
